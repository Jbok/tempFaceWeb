{"version":3,"sources":["../../fw_0607_deploy/src/routes/User/Posts/routes/Post/components/PostPage/PostPage.js","../../fw_0607_deploy/src/routes/User/Posts/routes/Post/components/PostPage/PostPage.enhancer.js","../../fw_0607_deploy/src/routes/User/Posts/routes/Post/components/PostPage/index.js"],"names":["PostPage","_ref","post","postId","console","log","react_default","a","createElement","compose","UserIsAuthenticated","withRouter","setPropTypes","match","PropTypes","shape","params","string","isRequired","withProps","firebaseConnect","_ref2","path","concat","connect","_ref3","_ref4","data","firebase","get","spinnerWhileLoading","enhance"],"mappings":"qHAmBeA,EAhBE,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,OAGxB,OAFAC,QAAQC,IAAIH,GAGVI,EAAAC,EAAAC,cAAA,WACGL,sFCEQM,cAEbC,IAEAC,IAEAC,YAAa,CACXC,MAAOC,IAAUC,MAAM,CACrBC,OAAQF,IAAUC,MAAM,CACtBZ,OAAQW,IAAUG,OAAOC,aACxBA,aACFA,aAELC,YAAU,SAAAlB,GAAA,MAAwC,CAChDE,OADQF,EAAGY,MAASG,OAAUb,UAGhCiB,0BAAgB,SAAAC,GAAA,IAAGlB,EAAHkB,EAAGlB,OAAH,MAAgB,CAAC,CAAEmB,KAAI,SAAAC,OAAWpB,OAClDqB,kBAAQ,SAAAC,EAAAC,GAAA,IAAeC,EAAfF,EAAGG,SAAYD,KAAYxB,EAA3BuB,EAA2BvB,OAA3B,MAAyC,CAC/CD,KAAM2B,cAAIF,EAAD,SAAAJ,OAAgBpB,OAG3B2B,YAAoB,CAAC,UC5BRC,YAAQ/B","file":"static/js/Project.80307d1b.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst PostPage = ({ post, postId }) => {\n  console.log(post);\n\n  return (\n    <div>\n      {postId}\n    </div>\n  );\n}\n\nPostPage.propTypes = {\n  classes: PropTypes.object.isRequired, // from enhancer (withStyles)\n  post: PropTypes.object.isRequired, // from enhancer (connect)\n  postId: PropTypes.string.isRequired // from enhancer (withProps)\n}\n\nexport default PostPage\n","import PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { get } from 'lodash'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { withRouter } from 'react-router-dom'\nimport { setPropTypes, withProps } from 'recompose'\nimport { spinnerWhileLoading } from 'utils/components'\nimport { UserIsAuthenticated } from 'utils/router'\n\nexport default compose(\n  // Redirect to /login if user is not logged in\n  UserIsAuthenticated,\n  // Add props.match\n  withRouter,\n  // Set proptypes of props used in HOCs\n  setPropTypes({\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        postId: PropTypes.string.isRequired\n      }).isRequired\n    }).isRequired\n  }),\n  withProps(({ match: { params: { postId } } }) => ({\n    postId\n  })),\n  firebaseConnect(({ postId }) => [{ path: `posts/${postId}` }]),\n  connect(({ firebase: { data } }, { postId }) => ({\n    post: get(data, `posts.${postId}`)\n  })),\n  // Show loading spinner while post is loading\n  spinnerWhileLoading(['post']),\n)\n","import PostPage from './PostPage'\nimport enhance from './PostPage.enhancer'\n\nexport default enhance(PostPage)\n"],"sourceRoot":""}