{"version":3,"sources":["utils/router.js","constants/formNames.js","components/Messages.js","utils/renderTextInputField.js","utils/renderTextAreaField.js","routes/User/Form2/components/FormPage2/index.js","routes/Admin/Post/components/AnswerForm/AnswerForm.js","routes/Admin/Post/components/AnswerForm/index.js","routes/Admin/Post/components/AnswerForm/AnswerForm.enhancer.js","routes/Admin/Post/components/PostItem/PostItem.js","routes/Admin/Post/components/PostItem/index.js","routes/Admin/Post/components/PostItem/PostItem.enhancer.js","routes/Admin/Post/components/PostsPage/PostsPage.js","routes/Admin/Post/components/PostsPage/PostsPage.enhancer.js","routes/Admin/Post/components/PostsPage/index.js","routes/User/Post/components/CreateForm/CreateForm.js","routes/User/Post/components/CreateForm/index.js","routes/User/Post/components/CreateForm/CreateForm.enhancer.js","routes/User/Post/components/PostPage/PostPage.js","routes/User/Post/components/PostPage/PostPage.enhancer.js","routes/User/Post/components/PostPage/index.js","routes/User/Dashboard/components/UploadGuide/index.js","routes/User/Dashboard/components/HistoryTable/index.js","routes/User/Dashboard/components/DashboardPage/DashboardPage.js","routes/User/Dashboard/components/DashboardPage/DashboardPage.enhancer.js","routes/User/Dashboard/components/DashboardPage/index.js","routes/User/Posts/routes/Post/index.js","routes/User/Posts/components/PostItem/index.js","routes/User/Posts/components/PostsPage/PostsPage.js","routes/User/Posts/components/PostsPage/PostsPage.enhancer.js","routes/User/Posts/components/PostsPage/index.js"],"names":["__webpack_require__","d","__webpack_exports__","UserIsAuthenticated","UserIsNotAuthenticated","redux_auth_wrapper_history4_redirect__WEBPACK_IMPORTED_MODULE_0__","redux_auth_wrapper_history4_locationHelper__WEBPACK_IMPORTED_MODULE_1__","redux_auth_wrapper_history4_locationHelper__WEBPACK_IMPORTED_MODULE_1___default","n","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_2__","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_2___default","components_LoadingSpinner__WEBPACK_IMPORTED_MODULE_3__","constants_paths__WEBPACK_IMPORTED_MODULE_4__","locationHelper","locationHelperBuilder","history","createHistory","connectedRouterRedirect","redirectPath","AuthenticatingComponent","LoadingSpinner","wrapperDisplayName","authenticatedSelector","_ref","auth","firebase","isEmpty","uid","authenticatingSelector","_ref2","_ref2$firebase","isInitializing","isLoaded","redirectAction","newLoc","dispatch","push","type","payload","message","allowRedirectBack","_ref3","_ref4","_ref4$firebase","state","ownProps","console","log","email","POST_PATH","getRedirectQueryParam","LIST_PATH","ACCOUNT_FORM_NAME","LOGIN_FORM_NAME","SIGNUP_FORM_NAME","NEW_POST_FORM_NAME","success","error","antd__WEBPACK_IMPORTED_MODULE_0__","content","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","FormItem","Form","Item","renderTextInputField","input","_ref$meta","meta","touched","warning","placeholder","label","formItemStyle","inputStyle","hasFeedback","labelCol","wrapperCol","disabled","defaultHasFeedback","hasButton","undefined","defaultLabelCol","span","defaultWrapperCol","errorProps","warningProps","successProps","validateStatus","help","value","a","createElement","Object","assign","colon","style","size","TextArea","Input","renderTextAreaField","rows","otherApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","DashboardPage","props","_this","_home_seungmin_Desktop_fw_0609_deploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_seungmin_Desktop_fw_0609_deploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_seungmin_Desktop_fw_0609_deploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","data","_this2","ref","database","on","snapshot","setState","val","array","$","map","index","sort","b","Average","obj","i","length","Ranking","changeObj","react__WEBPACK_IMPORTED_MODULE_5___default","className","keys","antd__WEBPACK_IMPORTED_MODULE_7__","scroll","x","columns","title","dataIndex","key","dataSource","pagination","React","PureComponent","Wrapper","styled","div","_templateObject","ButtonWrapper","_templateObject2","AnswerForm","submitting","handleSubmit","react_default","onSubmit","Field","name","component","es_button","loading","htmlType","components_AnswerForm","compose","reduxForm","form","concat","enhance","PostItem_templateObject","Title","h3","PostItem_templateObject2","PostItem","userEmail","createdAt","answer","formatedCreatedAt","moment","format","AnswerFormGenerator","PostItem_Wrapper","PostItem_TextArea","initialValues","divider","onSubmitSuccess","result","reset","PostsPage_templateObject","connect","spinnerWhileLoading","firebaseConnect","params","path","queryParams","posts","ordered","withRouter","withHandlers","updatePost","update","updatedAt","ServerValue","TIMESTAMP","then","catch","err","Promise","reject","PostsPage_Wrapper","components_PostItem","CreateForm","PostPage_templateObject","_ref$firebase$auth","addPost","newInstance","objectSpread","createdBy","PostPage_Wrapper","components_CreateForm","Meta","Card","Description","GuideImg","img","_templateObject3","UploadGuide","card","cover","alt","src","description","HistoryTable","table","locale","emptyText","requestUrl","dummyData","currentData","jaw","eye","lips","histories","DashboardPage_templateObject","pristine","imgData","numOfPeople","uploadStart","base64","axios","post","split","response","handleChange","info","file","status","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","_this$state","initialData","historiesArr","reduce","acc","generateHistoryTableData","DashboardPage_Wrapper","upload","listType","showUploadList","action","onChange","icon","imageBase64","Post","Loadable","loader","e","bind","Typography","StyledTextArea","level","PostsPage","match","goToPost","Switch","routes","parentProps","route","Route","url","render","renderChildren","PostRoute","exact","withNotifications","withStateHandlers","_ref4$initialDialogOp","initialDialogOpen","newDialogOpen","toggleDialog","_ref5","showError","showSuccess","deletePost","postId","remove","_ref6","USER_POSTS_PATH"],"mappings":"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","file":"static/js/Projects.db2df04a.chunk.js","sourcesContent":["import { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\nimport locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper'\nimport createHistory from 'history/createBrowserHistory'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { LIST_PATH, POST_PATH } from 'constants/paths'\n\nconst locationHelper = locationHelperBuilder({})\nconst history = createHistory()\n\nconst AUTHED_REDIRECT = 'AUTHED_REDIRECT'\nconst UNAUTHED_REDIRECT = 'UNAUTHED_REDIRECT'\n\n/**\n * Higher Order Component that redirects to `/login` instead\n * rendering if user is not authenticated (default of redux-auth-wrapper).\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: '/login',\n  AuthenticatingComponent: LoadingSpinner,\n  wrapperDisplayName: 'UserIsAuthenticated',\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    !auth.isEmpty && !!auth.uid,\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing,\n  redirectAction: newLoc => dispatch => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc)\n    dispatch({\n      type: UNAUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' }\n    })\n  }\n})\n\n/**\n * Higher Order Component that redirects to listings page or most\n * recent route instead rendering if user is not authenticated. This is useful\n * routes that should not be displayed if a user is logged in, such as the\n * login route.\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  AuthenticatingComponent: LoadingSpinner,\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: ({ firebase: { auth } }) => auth.isEmpty,\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing,\n  redirectPath: (state, ownProps) => {\n    console.log('state');\n    console.log(state);\n    console.log('ownProps');\n    console.log(ownProps);\n\n    const { firebase: { auth: { email } } } = state;\n\n    if (email === 'admin@test.com') {\n      console.log('isAdmin');\n      return POST_PATH;\n    }\n\n    return locationHelper.getRedirectQueryParam(ownProps) || LIST_PATH;\n  },\n  redirectAction: newLoc => dispatch => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc)\n    dispatch({\n      type: AUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' }\n    })\n  }\n})\n","export const ACCOUNT_FORM_NAME = 'account'\nexport const LOGIN_FORM_NAME = 'login'\nexport const SIGNUP_FORM_NAME = 'signup'\nexport const NEW_PROJECT_FORM_NAME = 'newProject'\nexport const NEW_POST_FORM_NAME = 'newPost'\nexport const NEW_ANSWER_FORM_NAME = 'newAnswer'\n","import { message } from 'antd';\n\nexport const success = content => {\n  message.success(content);\n};\n\nexport const error = content => {\n  message.error(content);\n};\n\nexport const warning = content => {\n  message.warning(content);\n};\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\nconst FormItem = Form.Item;\n\nconst renderTextInputField = ({\n  input,\n  meta: { touched, error, warning },\n  placeholder,\n  label,\n  type,\n  formItemStyle,\n  inputStyle,\n  hasFeedback,\n  labelCol,\n  wrapperCol,\n  disabled,\n  hasButton,\n}) => {\n  const defaultHasFeedback = hasFeedback === undefined ? true : hasFeedback;\n  const defaultLabelCol = !labelCol ? { span: 4 } : labelCol;\n  const defaultWrapperCol = !wrapperCol ? { span: 20 } : wrapperCol;\n  let errorProps = null;\n  let warningProps = null;\n  let successProps = null;\n\n  if (touched) {\n    if (error) {\n      errorProps = {\n        validateStatus: 'error',\n        help: error,\n      };\n    }\n\n    if (warning) {\n      warningProps = {\n        validateStatus: 'warning',\n        help: warning,\n      };\n    }\n\n    if (!error && !warning && input.value) {\n      successProps = {\n        validateStatus: 'success',\n      };\n    }\n  }\n\n  return (\n    <FormItem\n      labelCol={defaultLabelCol}\n      wrapperCol={defaultWrapperCol}\n      colon={false}\n      label={label}\n      hasFeedback={defaultHasFeedback}\n      style={formItemStyle}\n      {...errorProps || warningProps || successProps}\n    >\n      <Input\n        size=\"large\"\n        style={inputStyle}\n        type={type}\n        {...input}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </FormItem>\n  );\n};\n\nexport default renderTextInputField;\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\nconst { TextArea } = Input;\nconst FormItem = Form.Item;\n\nconst renderTextAreaField = ({\n  input,\n  meta: { touched, error, warning },\n  placeholder,\n  label,\n  type,\n  formItemStyle,\n  inputStyle,\n  hasFeedback,\n  labelCol,\n  wrapperCol,\n  disabled,\n  hasButton,\n}) => {\n  const defaultHasFeedback = hasFeedback === undefined ? true : hasFeedback;\n  const defaultLabelCol = !labelCol ? { span: 4 } : labelCol;\n  const defaultWrapperCol = !wrapperCol ? { span: 20 } : wrapperCol;\n  let errorProps = null;\n  let warningProps = null;\n  let successProps = null;\n\n  if (touched) {\n    if (error) {\n      errorProps = {\n        validateStatus: 'error',\n        help: error,\n      };\n    }\n\n    if (warning) {\n      warningProps = {\n        validateStatus: 'warning',\n        help: warning,\n      };\n    }\n\n    if (!error && !warning && input.value) {\n      successProps = {\n        validateStatus: 'success',\n      };\n    }\n  }\n\n  return (\n    <FormItem\n      labelCol={defaultLabelCol}\n      wrapperCol={defaultWrapperCol}\n      colon={false}\n      label={label}\n      hasFeedback={defaultHasFeedback}\n      style={formItemStyle}\n      {...errorProps || warningProps || successProps}\n    >\n      <TextArea\n        size=\"large\"\n        rows={8}\n        style={inputStyle}\n        type={type}\n        {...input}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </FormItem>\n  );\n};\n\nexport default renderTextAreaField;\n","import React, { Fragement } from 'react';\nimport styled from 'styled-components';\nimport { Upload, Icon, message } from 'antd';\nimport axios from 'axios';\nimport {Table} from 'antd';\nimport {tableData} from './data.json';\nimport firebase from 'firebase';\nimport { array } from 'prop-types';\nimport { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\nimport $ from 'jquery'\n\n\nvar firebaseConfig = ({\n  apiKey: \"AIzaSyCCU2VeOmng3BbpGcDzX79D9lTMmsRs9Gw\",\n  authDomain: \"lucky-aed54.firebaseapp.com\",\n  databaseURL: \"https://lucky-aed54.firebaseio.com\",\n  projectId: \"lucky-aed54\",\n  storageBucket: \"lucky-aed54.appspot.com\",\n  messagingSenderId: \"836535631836\"\n});\n// var firebaseConfig = ({\n//   apiKey: \"AIzaSyCtM6lcEnklYW3CqJopScxTHlCYmGi1SgA\",\n//   authDomain: \"lucky-b4c12.firebaseapp.com\",\n//   databaseURL: \"https://lucky-b4c12.firebaseio.com\",\n//   projectId: \"lucky-b4c12\",\n//   storageBucket: \"lucky-b4c12.appspot.com\",\n//   messagingSenderId: \"904413000870\",\n// });\n\n\nfunction changeObj(obj){\n  for(var i = 0; i <obj.length; i++)\n  {\n    obj[i].Ranking = i+1;\n  }\n}\n\nvar otherApp = firebase.initializeApp(firebaseConfig, 'other');\n\n\nexport default class DashboardPage extends React.PureComponent {\n  constructor(props){\n    super(props);\n    this.state = {data:[]}\n  }\n\n  componentDidMount() {\n      const ref = otherApp.database().ref('RANK');\n      console.log(\"ref\")\n      console.log(ref)\n      ref.on(\"value\", snapshot => {\n        this.setState({data:snapshot.val()});\n      });\n  }\n\n  render() {\n    const tableColumns = [\n      {\n        title: 'Ranking',\n        dataIndex: 'Ranking',\n        key: 'Ranking',\n      },\n      {\n        title: 'Email',\n        dataIndex: 'Email',\n        key: 'Email',   \n      },\n      {\n        title: 'Average',\n        dataIndex: 'Average',\n        key: 'Average',\n      },\n    ]\n\n    var array = $.map(this.state.data, function(value, index)\n    {\n      return [value];\n    });\n    console.log(\"array\")\n    console.log(array)\n\n    array.sort(function(a, b){\n      return a.Average - b.Average;\n    });\n\n    console.log(\"Sortedarray\")\n    console.log(array)\n\n\n\n    // var sortedData = Object.assign([], array).sort((a, b) => a.Average > b.Average);\n    // console.log(\"sortedData\")\n    // console.log(sortedData)\n    changeObj(array);\n\n    return (\n      <div className=\"card-body\">\n        \n        {console.log(\"bbb\")}\n        {console.log(this.state.data)}\n        {console.log(\"array\")}\n        {console.log(array)}\n        {console.log(Object.keys(this.state.data))}\n        \n        <Table\n          className=\"utils__scrollTable\"\n          scroll={{ x: '100%' }}\n          columns={tableColumns}\n          dataSource={array}\n          pagination={false}\n        />  \n      </div>\n    );\n}\n}","import React from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\nimport { Field } from 'redux-form'\nimport { Form, Input, Button } from 'antd';\n\nimport renderTextInputField from 'utils/renderTextInputField';\nimport renderTextAreaField from 'utils/renderTextAreaField';\n\nconst { TextArea } = Input;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1280px;\n\n  margin-top: 1rem;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst AnswerForm = ({ disabled, submitting, handleSubmit }) => (\n  <Wrapper>\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"answer\"\n          label=\"답변\"\n          component={renderTextAreaField}\n          disabled={submitting || disabled}\n        />\n      </div>\n      <ButtonWrapper>\n        <Button disabled={disabled} loading={submitting} htmlType=\"submit\" type=\"primary\">\n          완료\n        </Button>\n      </ButtonWrapper>\n    </form>\n  </Wrapper>\n)\n\nAnswerForm.propTypes = {\n  submitting: PropTypes.bool.isRequired, // from enhancer (reduxForm)\n  handleSubmit: PropTypes.func.isRequired, // from enhancer (reduxForm)\n}\n\nexport default AnswerForm;\n","import AnswerForm from './AnswerForm'\nimport enhance from './AnswerForm.enhancer'\n\nexport default key => enhance(key)(AnswerForm);\n","import { compose } from 'recompose';\nimport { reduxForm } from 'redux-form';\nimport { NEW_ANSWER_FORM_NAME } from 'constants/formNames';\n\nexport default key => compose(\n  reduxForm({\n    form: `${key}/NEW_ANSWER_FORM_NAME`,\n    // Clear the form for future use (creating another project)\n    //onSubmitSuccess: (result, dispatch, props) => props.reset(),\n  }),\n);\n","import React from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\nimport { Field } from 'redux-form'\nimport { Form, Input, Button, Divider } from 'antd';\nimport moment from 'moment';\n\nimport renderTextInputField from 'utils/renderTextInputField';\nimport renderTextAreaField from 'utils/renderTextAreaField';\n\nimport AnswerFormGenerator from '../AnswerForm';\n\nconst { TextArea } = Input;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1280px;\n\n  padding: 2rem;\n`;\n\nconst Title = styled.h3`\n`;\n\nconst PostItem = ({ uid, onSubmit, title, content, userEmail, createdAt, answer }) => {\n  const formatedCreatedAt = moment(createdAt).format('YYYY-MM-DD. hh:mm');\n  const AnswerForm = AnswerFormGenerator(uid);\n\n  return (\n    <Wrapper>\n      <Title>{`작성자: ${userEmail} (${formatedCreatedAt})`}</Title>\n      <Input value={title} disabled={true} />\n      <TextArea rows={8} value={content} disabled={true} />\n      <AnswerForm onSubmit={onSubmit} initialValues={{ uid, answer }} disabled={answer} />\n      <Divider />\n    </Wrapper>\n  );\n}\n\nexport default PostItem;\n","import PostItem from './PostItem'\nimport enhance from './PostItem.enhancer'\n\nexport default enhance(PostItem);\n","import { compose } from 'recompose';\nimport { reduxForm } from 'redux-form';\nimport { NEW_POST_FORM_NAME } from 'constants/formNames';\n\nexport default compose(\n  reduxForm({\n    form: NEW_POST_FORM_NAME,\n    // Clear the form for future use (creating another project)\n    onSubmitSuccess: (result, dispatch, props) => props.reset(),\n  }),\n);\n","import React, { Fragement } from 'react';\nimport styled from 'styled-components';\nimport { Upload, Icon, message } from 'antd';\nimport axios from 'axios';\n\nimport PostItem from '../PostItem';\n\nconst Wrapper = styled.div`\n`;\n\nexport default function PostsPage({ posts, updatePost }) {\n  return (\n    <Wrapper>\n      {posts.map(({ key, value }) => <PostItem key={key} onSubmit={updatePost} uid={key} {...value} />)}\n    </Wrapper>\n  );\n}\n","import { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withHandlers, withStateHandlers } from 'recompose'\nimport { withRouter } from 'react-router-dom'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { withNotifications } from 'modules/notification'\nimport { spinnerWhileLoading } from 'utils/components'\nimport { UserIsAuthenticated } from 'utils/router'\n\nimport { success, error } from 'components/Messages';\n\nexport default compose(\n  // redirect to /login if user is not logged in\n  UserIsAuthenticated,\n  // Map auth uid from state to props\n  connect(({ firebase: { auth: { uid } } }) => ({ uid })),\n  // Wait for uid to exist before going further\n  spinnerWhileLoading(['uid']),\n  // Create listeners based on current users UID\n  firebaseConnect(({ params }) => [\n    {\n      path: 'posts',\n      queryParams: ['orderByChild=createdBy']\n    }\n  ]),\n  // Map posts from state to props\n  connect(({ firebase: { ordered } }) => ({\n    posts: ordered.posts\n  })),\n  // Show loading spinner while posts and collabProjects are loading\n  spinnerWhileLoading(['posts']),\n  // Add props.router\n  withRouter,\n  // Add handlers as props\n  withHandlers({\n    updatePost: props => ({ uid, answer }) => {\n      const { firebase, uid: userUid } = props\n      if (!userUid) {\n        return error('로그인이 필요한 작업입니다.');\n      }\n      return firebase\n        .update(`posts/${uid}`, {\n          answer,\n          updatedAt: firebase.database.ServerValue.TIMESTAMP\n        })\n        .then(() => {\n          success('답변 완료!');\n        })\n        .catch(err => {\n          console.error('Error:', err); // eslint-disable-line no-console\n          error(err.message || '실패.');\n          return Promise.reject(err);\n        })\n    },\n  }),\n)\n","import PostsPage from './PostsPage'\nimport enhance from './PostsPage.enhancer'\n\nexport default enhance(PostsPage);\n","import React from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\nimport { Field } from 'redux-form'\nimport { Form, Input, Button } from 'antd';\n\nimport renderTextInputField from 'utils/renderTextInputField';\nimport renderTextAreaField from 'utils/renderTextAreaField';\n\nconst { TextArea } = Input;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1280px;\n\n  padding: 2rem;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst CreateForm = ({ submitting, handleSubmit }) => (\n  <Wrapper>\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"title\"\n          label=\"제목\"\n          component={renderTextInputField}\n          disabled={submitting}\n        />\n      </div>\n      <div>\n        <Field\n          name=\"content\"\n          label=\"내용\"\n          component={renderTextAreaField}\n          disabled={submitting}\n        />\n      </div>\n      <ButtonWrapper>\n        <Button loading={submitting} htmlType=\"submit\" type=\"primary\">\n          완료\n        </Button>\n      </ButtonWrapper>\n    </form>\n  </Wrapper>\n)\n\nCreateForm.propTypes = {\n  submitting: PropTypes.bool.isRequired, // from enhancer (reduxForm)\n  handleSubmit: PropTypes.func.isRequired, // from enhancer (reduxForm)\n}\n\nexport default CreateForm;\n","import CreateForm from './CreateForm'\nimport enhance from './CreateForm.enhancer'\n\nexport default enhance(CreateForm);\n","import { compose } from 'recompose';\nimport { reduxForm } from 'redux-form';\nimport { NEW_POST_FORM_NAME } from 'constants/formNames';\n\nexport default compose(\n  reduxForm({\n    form: NEW_POST_FORM_NAME,\n    // Clear the form for future use (creating another project)\n    onSubmitSuccess: (result, dispatch, props) => props.reset(),\n  }),\n);\n","import React, { Fragement } from 'react';\nimport styled from 'styled-components';\nimport { Upload, Icon, message } from 'antd';\nimport axios from 'axios';\n\nimport CreateForm from '../CreateForm';\n\nconst Wrapper = styled.div`\n`;\n\nexport default function PostPage({ addPost }) {\n  return (\n    <Wrapper>\n      <CreateForm onSubmit={addPost} />\n    </Wrapper>\n  );\n}\n","import { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withHandlers, withStateHandlers } from 'recompose'\nimport { withRouter } from 'react-router-dom'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { withNotifications } from 'modules/notification'\nimport { spinnerWhileLoading } from 'utils/components'\nimport { UserIsAuthenticated } from 'utils/router'\n\nimport { success, error } from 'components/Messages';\nimport { LIST_PATH } from 'constants/paths'\n\nexport default compose(\n  // redirect to /login if user is not logged in\n  UserIsAuthenticated,\n  // Map auth uid from state to props\n  connect(({ firebase: { auth: { uid, email } } }) => ({ uid, email })),\n  // Wait for uid to exist before going further\n  spinnerWhileLoading(['uid']),\n  // Create listeners based on current users UID\n  firebaseConnect(({ params, uid }) => [\n    {\n      path: 'posts',\n      queryParams: ['orderByChild=createdBy', `equalTo=${uid}`]\n    }\n  ]),\n  // Add props.router\n  withRouter,\n  // Add handlers as props\n  withHandlers({\n    addPost: props => newInstance => {\n      const { firebase, uid, email } = props\n      if (!uid) {\n        return error('로그인이 필요한 작업입니다.');\n      }\n      return firebase\n        .push('posts', {\n          ...newInstance,\n          userEmail: email,\n          createdBy: uid,\n          createdAt: firebase.database.ServerValue.TIMESTAMP\n        })\n        .then(() => {\n          success('작성을 성공적으로 마무리했습니다.');\n        })\n        .catch(err => {\n          console.error('Error:', err); // eslint-disable-line no-console\n          error(err.message || '실패.');\n          return Promise.reject(err);\n        })\n    },\n  }),\n)\n","import PostPage from './PostPage'\nimport enhance from './PostPage.enhancer'\n\nexport default enhance(PostPage);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, Col, Row } from 'antd';\n\nconst { Meta } = Card;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 30px;\n  margin-bottom: 30px;\n\n  background: #ECECEC;\n\n  > div {\n    flex: 1;\n\n    margin: 10px;\n  }\n\n  @media screen and (max-width: 576px) {\n    flex-direction: column;\n\n    > div {\n      margin: 10px;\n    }\n  }\n`;\n\nconst Description = styled.div`\n  word-break: keep-all;\n`;\n\nconst GuideImg = styled.img`\n  width: 100%;\n`;\n\nexport default function UploadGuide() {\n  return (\n    <Wrapper>\n      <Card cover={<GuideImg alt=\"올바른 요청\" src=\"https://post-phinf.pstatic.net/MjAxODAzMTVfMTg5/MDAxNTIxMTEwODcyNDAw.VydowXsV01QXlULeVB0kwkwyS30umKOBsDQH0wRIrq4g.twzyKxF6IfxXxxlzsDIZmUtI43RixX0ypWW1l_1Ru0Yg.JPEG/SmartSelectImage_2018-03-15-19-42-18.jpg?type=w1200\" />}>\n        <Meta title=\"올바른 요청 예시\" description={<Description>{'정면을 바라보는 사진이 측정 잘 돼요.'}</Description>} />\n      </Card>\n      <Card cover={<GuideImg alt=\"잘못된 요청1\" src=\"http://www.siminilbo.co.kr/news/photo/201809/578254_133805_2915.jpg\" />}>\n        <Meta title=\"잘못된 요청 예시\" description={<Description>{'얼굴을 알아보기 힘든 사진은 측정이 어려워요.'}</Description>} />\n      </Card>\n      <Card cover={<GuideImg alt=\"잘못된 요청2\" src=\"http://newsimg.hankookilbo.com/2018/03/23/201803231654225331_1.jpg\" />}>\n        <Meta title=\"잘못된 요청 예시\" description={<Description>{'각도가 돌아가는 사진은 측정이 어려워요.'}</Description>} />\n      </Card>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Table } from 'antd';\n\nconst columns = [\n  {\n    title: '날짜',\n    dataIndex: 'date',\n    key: 'date,'\n  },\n  {\n    title: '턱대칭률',\n    dataIndex: 'jaw',\n    key: 'jaw',\n  },\n  {\n    title: '코대칭률',\n    dataIndex: 'nose',\n    key: 'nose',\n  },\n  {\n    title: '입술대칭률',\n    dataIndex: 'lips',\n    key: 'lips',\n  },\n];\n\nexport default function HistoryTable({ dataSource, loading }) {\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      loading={loading}\n      locale={{ emptyText: '검사하기를 눌러서 확인해보세요.' }}\n    />\n  );\n}\n","import React, { Fragement } from 'react';\nimport styled from 'styled-components';\nimport { Upload, Icon, message } from 'antd';\nimport axios from 'axios';\nimport $ from 'jquery';\n\nimport UploadGuide from '../UploadGuide';\nimport HistoryTable from '../HistoryTable';\n\nconst requestUrl = 'https://skb89qsem5.execute-api.ap-northeast-2.amazonaws.com/dev/test/image';\nconst dummyBase64 = \"\";\n\nconst dummyData = {\n  currentData: {\n    jaw: 9.688786560366793,\n    eye: 2.8912695962205643,\n    lips: 25.463345061871614,\n  },\n  histories: [\n    {\n      jaw: 9.588786560366793,\n      eye: 2.7912695962205643,\n      lips: 23.463345061871614,\n    },\n    {\n      jaw: 9.888786560366793,\n      eye: 2.8732695962205643,\n      lips: 24.463345061871614,\n    },\n  ],\n};\n\n\nfunction generateHistoryTableData(data) {\n\n  console.log(\"data\")\n  console.log(data)\n  console.log(\"data.histories\")\n  console.log(data.histories)\n\n  const initialData = Object.keys(data.currentData).length > 0 ? [{ key: 0, ...data.currentData }] : [];\n\n  var historiesArr = $.map(data.histories, function(value, index){\n    return [value];\n  })\n  console.log(\"historiesArr\")\n  console.log(historiesArr)\n\n  return historiesArr.reduce((acc, history, index) => {\n    console.log(\"acc\")\n    console.log(acc)\n\n    console.log(\"history\")\n    console.log(history)\n\n    console.log(\"index\")\n    console.log(index)\n    acc.push({\n      key: index + 1,\n      ...history,\n    });\n\n    return acc;\n  }, initialData);\n}\n\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  /*\n  const isJPG = file.type === 'image/jpeg';\n  if (!isJPG) {\n    message.error('You can only upload JPG file!');\n  }\n  */\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n  return /* isJPG && */ isLt2M;\n}\n\nconst Wrapper = styled.div`\n`;\n\nexport default class DashboardPage extends React.PureComponent {\n  state = {\n    pristine: true,\n    loading: false,\n    error: false,\n    data: {\n      data : {\n        currentData: {},\n        histories: [],\n        imgData: {},\n      },\n      numOfPeople: \"\",\n    },\n  };\n\n  uploadStart = base64 => {\n    axios.post(requestUrl, {data : `\"${base64.split(',')[1]}\"`, uid: this.props.uid})\n      .then(response => {\n        console.log(\"response\")\n        console.log(response)\n        this.setState({\n          loading: false,\n          data: response.data,\n          message: response.message,\n        });\n        \n      })\n      .catch(error => {\n        this.setState({\n          loading: false,\n          error: true,\n          data: dummyData,\n        });\n        console.log(error);\n      });\n  }\n\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({ pristine: false, loading: true, error: false });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, base64 => this.uploadStart(base64));\n    }\n  }\n\n  render() {\n    const {\n      data,\n      pristine,\n      loading,\n      error,\n    } = this.state;\n\n    const dataSource = generateHistoryTableData(data.data);\n\n    console.log(\"numOfPeople\")\n    console.log(data.numOfPeople)\n    return (\n      <Wrapper>\n        <UploadGuide />\n        <Upload\n          name=\"avatar\"\n          listType=\"picture-card\"\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n          onChange={this.handleChange}\n        >\n          <div>\n            <Icon type={loading ? 'loading' : 'plus'} />\n            <div className=\"ant-upload-text\">검사하기</div>\n          </div>\n        </Upload>\n        <div>\n          <h1>\n            {Object.keys(data.data.currentData).length != 0 && <img src={\"data:image/jpeg;base64,\"+data.data.imgData.imageBase64}></img>}\n          </h1>\n        </div>\n        <HistoryTable dataSource={dataSource} loading={loading} />\n      </Wrapper>\n    );\n  }\n}\n\n","import { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withHandlers, withStateHandlers } from 'recompose'\nimport { withRouter } from 'react-router-dom'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { withNotifications } from 'modules/notification'\nimport { spinnerWhileLoading } from 'utils/components'\nimport { UserIsAuthenticated } from 'utils/router'\n\nimport { success, error } from 'components/Messages';\nimport { LIST_PATH } from 'constants/paths'\n\nexport default compose(\n  // redirect to /login if user is not logged in\n  UserIsAuthenticated,\n  // Map auth uid from state to props\n  connect(({ firebase: { auth: { uid } } }) => ({ uid })),\n  // Wait for uid to exist before going further\n  spinnerWhileLoading(['uid']),\n  // Create listeners based on current users UID\n  firebaseConnect(({ params, uid }) => [\n    {\n      path: 'posts',\n      queryParams: ['orderByChild=createdBy', `equalTo=${uid}`]\n    }\n  ]),\n  // Add props.router\n  withRouter,\n  // Add handlers as props\n  withHandlers({\n    addPost: props => newInstance => {\n      const { firebase, uid } = props\n      if (!uid) {\n        return error('로그인이 필요한 작업입니다.');\n      }\n      return firebase\n        .push('posts', {\n          ...newInstance,\n          createdBy: uid,\n          createdAt: firebase.database.ServerValue.TIMESTAMP\n        })\n        .then(() => {\n          success('작성을 성공적으로 마무리했습니다.');\n        })\n        .catch(err => {\n          console.error('Error:', err); // eslint-disable-line no-console\n          error(err.message || '실패.');\n          return Promise.reject(err);\n        })\n    },\n  }),\n)\n","import DashboardPage from './DashboardPage'\nimport enhance from './DashboardPage.enhancer'\n\nexport default enhance(DashboardPage);\n","import { Loadable } from 'utils/components'\n\nexport default {\n  path: ':postId',\n  component: Loadable({\n    loader: () =>\n      import(/* webpackChunkName: 'Project' */ './components/PostPage')\n  })\n}\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\nimport { Input, Divider, Typography } from 'antd';\nimport moment from 'moment';\n\nconst { Title } = Typography;\n\nconst { TextArea } = Input;\n\nconst Wrapper = styled.div`\n  display:flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n\n  margin-bottom: 1rem;\n`;\n\nconst StyledTextArea = styled(TextArea)`\n  width: 100%;\n\n  margin-bottom: 1rem;\n`;\n\nexport default function PostItem({ content, title, answer, createdAt }) {\n  const formatedCreatedAt = moment(createdAt).format('YYYY-MM-DD. hh:mm');\n\n  return (\n    <Wrapper>\n      <Title level={4}>{`${title} (${formatedCreatedAt})`}</Title>\n      <StyledTextArea rows={4} value={`-내용-\\n${content}`} disabled={true} />\n      <Title level={4}>답변</Title>\n      {answer ?\n        <StyledTextArea rows={4} value={`-답변-\\n${answer}`} disabled={true} /> :\n        <div>아직 답변이 없습니다.</div>\n      }\n      <Divider />\n    </Wrapper>\n  );\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { isEmpty } from 'react-redux-firebase'\nimport { Route, Switch } from 'react-router-dom'\nimport PostRoute from 'routes/User/Posts/routes/Post'\nimport PostItem from '../PostItem';\n\nconst renderChildren = (routes, match, parentProps) =>\n  routes.map(route => (\n    <Route\n      key={`${match.url}-${route.path}`}\n      path={`${match.url}/${route.path}`}\n      render={props => <route.component {...parentProps} {...props} />}\n    />\n  ))\n\nexport const PostsPage = ({\n  posts,\n  auth,\n  match,\n  goToPost,\n}) => {\n  return (\n    <Switch>\n      {/* Child routes */}\n      {renderChildren([PostRoute], match, { auth })}\n      {/* Main Route */}\n      <Route\n        exact\n        path={match.path}\n        render={() => (\n          <div>\n            {!isEmpty(posts) &&\n                posts.map(({ key, value }) => (\n                  <PostItem key={key} {...value} />\n              ))}\n          </div>\n        )}\n      />\n    </Switch>\n  );\n}\n\nPostsPage.propTypes = {\n  match: PropTypes.object.isRequired, // from enhancer (withRouter)\n  auth: PropTypes.object, // from enhancer (connect + firebaseConnect - firebase)\n  posts: PropTypes.array, // from enhancer (connect + firebaseConnect - firebase)\n  newDialogOpen: PropTypes.bool, // from enhancer (withStateHandlers)\n  toggleDialog: PropTypes.func.isRequired, // from enhancer (withStateHandlers)\n  deletePost: PropTypes.func.isRequired, // from enhancer (withHandlers - firebase)\n  addPost: PropTypes.func.isRequired, // from enhancer (withHandlers - firebase)\n  goToPost: PropTypes.func.isRequired // from enhancer (withHandlers - router)\n}\n\nexport default PostsPage\n","import { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { USER_POSTS_PATH } from 'constants/paths'\nimport { withHandlers, withStateHandlers } from 'recompose'\nimport { withRouter } from 'react-router-dom'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { withNotifications } from 'modules/notification'\nimport { spinnerWhileLoading } from 'utils/components'\nimport { UserIsAuthenticated } from 'utils/router'\n\nexport default compose(\n  // redirect to /login if user is not logged in\n  UserIsAuthenticated,\n  // Map auth uid from state to props\n  connect(({ firebase: { auth: { uid } } }) => ({ uid })),\n  // Wait for uid to exist before going further\n  spinnerWhileLoading(['uid']),\n  // Create listeners based on current users UID\n  firebaseConnect(({ params, uid }) => [\n    {\n      path: 'posts',\n      queryParams: ['orderByChild=createdBy', `equalTo=${uid}`]\n    }\n  ]),\n  // Map posts from state to props\n  connect(({ firebase: { ordered } }) => ({\n    posts: ordered.posts\n  })),\n  // Show loading spinner while posts and collabPosts are loading\n  spinnerWhileLoading(['posts']),\n  // Add props.router\n  withRouter,\n  // Add props.showError and props.showSuccess\n  withNotifications,\n  // Add state and state handlers as props\n  withStateHandlers(\n    // Setup initial state\n    ({ initialDialogOpen = false }) => ({\n      newDialogOpen: initialDialogOpen\n    }),\n    // Add state handlers as props\n    {\n      toggleDialog: ({ newDialogOpen }) => () => ({\n        newDialogOpen: !newDialogOpen\n      })\n    }\n  ),\n  // Add handlers as props\n  withHandlers({\n    addPost: props => newInstance => {\n      const { firebase, uid, showError, showSuccess, toggleDialog } = props\n      if (!uid) {\n        return showError('You must be logged in to create a post')\n      }\n      return firebase\n        .push('posts', {\n          ...newInstance,\n          createdBy: uid,\n          createdAt: firebase.database.ServerValue.TIMESTAMP\n        })\n        .then(() => {\n          toggleDialog()\n          showSuccess('Post added successfully')\n        })\n        .catch(err => {\n          console.error('Error:', err) // eslint-disable-line no-console\n          showError(err.message || 'Could not add post')\n          return Promise.reject(err)\n        })\n    },\n    deletePost: props => postId => {\n      const { firebase, showError, showSuccess } = props\n      return firebase\n        .remove(`posts/${postId}`)\n        .then(() => showSuccess('Post deleted successfully'))\n        .catch(err => {\n          console.error('Error:', err) // eslint-disable-line no-console\n          showError(err.message || 'Could not delete post')\n          return Promise.reject(err)\n        })\n    },\n    goToPost: ({ history }) => postId => {\n      history.push(`${USER_POSTS_PATH}/${postId}`)\n    }\n  }),\n)\n","import PostsPage from './PostsPage'\nimport enhance from './PostsPage.enhancer'\n\nexport default enhance(PostsPage)\n"],"sourceRoot":""}